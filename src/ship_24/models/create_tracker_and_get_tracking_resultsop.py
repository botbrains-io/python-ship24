"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .event import Event, EventTypedDict
from .shipment import Shipment, ShipmentTypedDict
from .statistics import Statistics, StatisticsTypedDict
from .tracker import Tracker, TrackerTypedDict
from ship_24.types import BaseModel
from typing import Dict, List, Optional
from typing_extensions import NotRequired, TypedDict


class CreateTrackerAndGetTrackingResultsTrackingTypedDict(TypedDict):
    tracker: NotRequired[TrackerTypedDict]
    shipment: NotRequired[ShipmentTypedDict]
    events: NotRequired[List[EventTypedDict]]
    statistics: NotRequired[StatisticsTypedDict]


class CreateTrackerAndGetTrackingResultsTracking(BaseModel):
    tracker: Optional[Tracker] = None

    shipment: Optional[Shipment] = None

    events: Optional[List[Event]] = None

    statistics: Optional[Statistics] = None


class CreateTrackerAndGetTrackingResultsDataTypedDict(TypedDict):
    trackings: NotRequired[List[CreateTrackerAndGetTrackingResultsTrackingTypedDict]]


class CreateTrackerAndGetTrackingResultsData(BaseModel):
    trackings: Optional[List[CreateTrackerAndGetTrackingResultsTracking]] = None


class CreateTrackerAndGetTrackingResultsResponseBodyTypedDict(TypedDict):
    r"""OK"""

    data: NotRequired[CreateTrackerAndGetTrackingResultsDataTypedDict]


class CreateTrackerAndGetTrackingResultsResponseBody(BaseModel):
    r"""OK"""

    data: Optional[CreateTrackerAndGetTrackingResultsData] = None


class CreateTrackerAndGetTrackingResultsResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: CreateTrackerAndGetTrackingResultsResponseBodyTypedDict


class CreateTrackerAndGetTrackingResultsResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: CreateTrackerAndGetTrackingResultsResponseBody
